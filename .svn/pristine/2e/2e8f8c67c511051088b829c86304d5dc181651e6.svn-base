package com.saving.metadata.controller;


import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.saving.metadata.common.ResponseCode;
import com.saving.metadata.common.ServerResponse;
import com.saving.metadata.pojo.ConversionRecord;
import com.saving.metadata.service.ConversionRecordService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.Map;

/**
 * <p>
 * 前端控制器
 * </p>
 *
 * @author 朱柯辉
 * @since 2020-01-15
 */
@RestController
@RequestMapping("/metadata/conversionRecord")
@Slf4j
@Api(tags = "ETL记录相关接口")
public class ConversionRecordController {
    private final ConversionRecordService conversionRecordService;


    @Autowired
    public ConversionRecordController(ConversionRecordService conversionRecordService) {
        this.conversionRecordService = conversionRecordService;
    }


    @PostMapping("listPage.json")
    @ApiOperation(value = "ETL操作日志分页查询接口", notes = "物理分页")
    @ApiImplicitParams(value = {
            @ApiImplicitParam(name = "pageNum", value = "第几页", required = true, paramType = "query"),
            @ApiImplicitParam(name = "pageSize", value = "每页几条", required = true, paramType = "query"),
            @ApiImplicitParam(name = "startDate", value = "操作日期开始时间"),
            @ApiImplicitParam(name = "endDate", value = "操作日期结束时间"),
            @ApiImplicitParam(name = "transformationsName", value = "转换名称，用于过滤")
    })
    public ServerResponse<Page<ConversionRecord>> listPage(
            @RequestParam(defaultValue = ResponseCode.PAGENUM) int pageNum
            , @RequestParam(defaultValue = ResponseCode.PAGESIZE) int pageSize
            , String transformationsName
            , String startDate
            , String endDate) {
        Page<ConversionRecord> page = conversionRecordService.page(new Page<>(pageNum, pageSize), new QueryWrapper<ConversionRecord>().lambda()
                .like(StringUtils.isNotEmpty(transformationsName), ConversionRecord::getTransformationsName, transformationsName)
                .between(StringUtils.isNoneBlank(startDate) && StringUtils.isNoneBlank(endDate), ConversionRecord::getStartTime, startDate, endDate).orderByDesc(ConversionRecord::getStartTime));
        return ServerResponse.createBySuccess(page);
    }


    @PostMapping("listPageAnalysis.json")
    @ApiOperation(value = "ETL操作日志分析分页查询接口", notes = "物理分页")
    @ApiImplicitParams(value = {
            @ApiImplicitParam(name = "pageNum", value = "第几页", required = true, paramType = "query"),
            @ApiImplicitParam(name = "pageSize", value = "每页几条", required = true, paramType = "query"),
            @ApiImplicitParam(name = "startDate", value = "操作日期开始时间"),
            @ApiImplicitParam(name = "endDate", value = "操作日期结束时间"),
            @ApiImplicitParam(name = "str", value = "日期参数(年、月、日、周次)，用于过滤")
    })
    public ServerResponse<Page<Map<String, String>>> listPageAnalysis(
            @RequestParam(defaultValue = ResponseCode.PAGENUM) int pageNum
            , @RequestParam(defaultValue = ResponseCode.PAGESIZE) int pageSize
            , String str) {

        return conversionRecordService.listPageAnalysis(pageNum, pageSize, str);
    }

}

